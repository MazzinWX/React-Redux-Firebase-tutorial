{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toDateString","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68831c99.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><NavLink onClick={props.signOut}>Log Out</NavLink></li>\r\n        <li><NavLink to='/' className='btn btn-floating red lighten-1'>\r\n        {props.profile.initials}\r\n        </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCES' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\n\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{project.createdAt.toDate().toDateString()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'notifications', limit: 3, orderBy:['time','desc'] },\r\n        { collection: 'projects', orderBy:['createdAt','desc'] }\r\n\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{project.createdAt.toDate().toDateString()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to db\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/' component={Dashboard} />\r\n\t\t\t\t\t<Route path='/project/:id' component={ProjectDetails} />\r\n\t\t\t\t\t<Route path='/signin' component={SignIn} />\r\n\t\t\t\t\t<Route path='/signup' component={SignUp} />\r\n\t\t\t\t\t<Route path='/create' component={CreateProject} />\r\n\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCES':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'Help me find Peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'Collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'Egg hunt with Yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport * as firebase from \"firebase/app\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAa2rBm9y03ao9jT2HE1ybBInlg7s1Fhbs\",\r\n    authDomain: \"mazzinwx-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://mazzinwx-marioplan.firebaseio.com\",\r\n    projectId: \"mazzinwx-marioplan\",\r\n    storageBucket: \"mazzinwx-marioplan.appspot.com\",\r\n    messagingSenderId: \"724973880969\",\r\n    appId: \"1:724973880969:web:c298948d576ee9df\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    serviceWorker.unregister();    \r\n})\r\n\r\n"],"sourceRoot":""}